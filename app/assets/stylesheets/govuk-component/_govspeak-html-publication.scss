// Override govspeak styles with HTML publication specific ones
.govuk-govspeak-html-publication {
  @extend %contain-floats;
  position: relative;
  margin-bottom: $gutter * 1.5;
  z-index: 2;

  // This fixes the positioning of the sticky element. The reason it's done on the parent element
  // is because directly messing with the positioning of the sticky element produces undesirable results.
  // The nested govspeak component handles its own text direction independently, but will
  // coincide with the direction of its parent anyway in all usecases.
  @include direction-rtl;

  .govuk-govspeak {
    @include media(tablet) {
      width: 75%;
      float: right;

      &.direction-rtl {
        float: left;
      }
    }

    .number {
      background: $white;
    }

    h2 {
      @include bold-36;
      padding-right: $gutter-one-third;

      .number {
        @include media(tablet) {
          @include bold-80;
          position: absolute;
          margin-top: -$gutter;
          margin-left: -25%;
          width: 22%;
          padding: ($gutter + $gutter / 6) 0 $gutter 3%;

          @include ie(7) {
            margin-left: -35%;
          }
        }
      }
    }

    &.direction-rtl h2 {
      padding-right: 0;
      padding-left: $gutter-one-third;

      .number {
        @include media(tablet) {
          margin-left: 0;
          margin-right: -25%;
          padding-left: 0;
          padding-right: 3%;
        }
      }
    }

    h3 {
      @include bold-27;
      padding-right: $gutter-one-third;

      @include media(table) {
        padding-right: 0;
      }

      .number {
        color: $secondary-text-colour;

        @include media(tablet) {
          position: absolute;
          width: $gutter * 2.5;
          margin-left: $gutter * -2.5;
        }
      }
    }

    &.direction-rtl h3 {
      padding-right: 0;
      padding-left: $gutter-one-third;

      .number {
        @include media(tablet) {
          margin-left: 0;
          margin-right: $gutter * -2.5;
        }
      }
    }

    .stat-headline:first-child {
      margin-top: $gutter;

      @include media(tablet) {
        margin-top: ($gutter * 2) + $gutter-two-thirds;
      }
    }

    h2,
    h3 {
      margin-top: $gutter;

      @include media(tablet) {
        margin-top: ($gutter * 2) + $gutter-two-thirds;
      }
    }
  }

  .sticky-element {
    clear: both;
  }
}
