// Override govspeak styles with HTML publication specific ones
.govuk-govspeak-html-publication {
  @extend %contain-floats;
  position: relative;
  margin-bottom: $gutter * 1.5;
  z-index: 2;

  // This fixes the positioning of the sticky element. The reason it's done on the parent element
  // is because directly messing with the positioning of the sticky element produces undesirable results.
  // The nested govspeak component handles its own text direction independently, but will
  // coincide with the direction of its parent anyway in all usecases.
  @include direction-rtl;

  .govuk-govspeak {
    @include media(tablet) {
      width: 75%;
      float: right;

      &.direction-rtl {
        float: left;
      }
    }

    .number {
      background: $white;
    }

    h2 {
      @include bold-36;
      padding-right: $gutter-one-third;

      .number {
        @include media(tablet) {
          @include bold-80;
          position: absolute;
          margin-top: -$gutter;
          margin-left: -25%;
          width: 22%;
          padding: ($gutter + $gutter / 6) 0 $gutter 3%;

          @include ie(7) {
            margin-left: -35%;
          }
        }
      }
    }

    &.direction-rtl h2 {
      padding-right: 0;
      padding-left: $gutter-one-third;

      .number {
        @include media(tablet) {
          margin-left: 0;
          margin-right: -25%;
          padding-left: 0;
          padding-right: 3%;
        }
      }
    }

    h3 {
      @include bold-27;
      padding-right: $gutter-one-third;

      @include media(table) {
        padding-right: 0;
      }

      .number {
        color: $secondary-text-colour;

        @include media(tablet) {
          position: absolute;
          width: $gutter * 2.5;
          margin-left: $gutter * -2.5;
        }
      }
    }

    &.direction-rtl h3 {
      padding-right: 0;
      padding-left: $gutter-one-third;

      .number {
        @include media(tablet) {
          margin-left: 0;
          margin-right: $gutter * -2.5;
        }
      }
    }

    .stat-headline:first-child {
      margin-top: $gutter;

      @include media(tablet) {
        margin-top: ($gutter * 2) + $gutter-two-thirds;
      }
    }

    h2,
    h3 {
      margin-top: $gutter;

      @include media(tablet) {
        margin-top: ($gutter * 2) + $gutter-two-thirds;
      }
    }

    h2:first-child,
    h3:first-child {
      margin-top: 0;

      // Reduce default margin by 2x gutter for first headings
      // This accounts for the 2x gutter margin on the HTML pub header
      // which doesn't collapse because of containers
      @include media(tablet) {
        margin-top: $gutter-two-thirds;
      }
    }

    // scss-lint:disable QualifyingElement
    // this class will only be for tables and is to distinguish from a bare `table`
    // the row classes below should not be applied to anything else but `tr`s
    table.financial-data {

      .numeric {
        text-align: right;
        font-family: $nta-light-tabular;
      }

      // make all elements inside thead look the same
      // (td can sometimes be used to overcome complexity of multiple lines in thead)
      // and make all of thead and tfoot stand out
      thead,
      tfoot {
        background-color: $grey-3;
      }

      thead th,
      thead td {
        font-weight: bold;
      }

      // don't make `th`s bold unless they are a section heading or a (sub)total row
      tbody th,
      tfoot th {
        font-weight: normal;
      }

      // needs padding due to occasional background colour
      // is intentionally small and not balanced with other padding
      // as tables can be quite wide
      tr > :first-child {
        padding-left: $gutter-one-third / 2;
      }

      // add spacing so that groupings are clearer
      tr.section-heading > * {
        font-weight: bold;
        padding-top: $gutter;
      }

      // ideally this should be just a top margin on the tfoot
      // but as that is very tricky, this is more complex
      tbody:last-of-type tr:last-child > *,
      tfoot ~ tbody:last-of-type tr:last-child > * {
        padding-bottom: $gutter;
      }

      tbody:last-child tr:last-child > * {
        padding-bottom: $gutter-one-third;
      }

      // total and subtotal rows
      tr.subtotal > *,
      tr.total > * {
        border-top: 3px solid $grey-2;
      }

      tr.total > *,
      tbody tr.subtotal > * {
        font-weight: bold;
      }

      // the total is usually in the tfoot, so already has that background colour
      // but when it's used inside the tbody, it should also be highlighted
      tr.total {
        background-color: $grey-3;
      }
    }
    // scss-lint:enable QualifyingElement
  }

  .sticky-element {
    clear: both;
  }
}
